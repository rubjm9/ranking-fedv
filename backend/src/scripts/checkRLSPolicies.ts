import { supabaseAdmin } from '../services/supabaseService';
import dotenv from 'dotenv';

dotenv.config();

async function checkRLSPolicies() {
  try {
    console.log('üîí Verificando pol√≠ticas RLS en Supabase...\n');

    // Verificar si RLS est√° habilitado en las tablas
    const tables = ['regions', 'teams', 'tournaments', 'positions', 'ranking_history', 'configurations', 'users', 'audit_logs'];

    for (const table of tables) {
      const { data, error } = await supabaseAdmin
        .from('information_schema.tables')
        .select('*')
        .eq('table_name', table)
        .eq('table_schema', 'public');

      if (error) {
        console.log(`‚ùå Error verificando tabla ${table}:`, error);
      } else {
        console.log(`‚úÖ Tabla ${table} existe`);
      }
    }

    // Probar inserci√≥n en regions (deber√≠a fallar sin pol√≠ticas)
    console.log('\nüß™ Probando inserci√≥n en regions...');
    const testRegion = {
      id: crypto.randomUUID(),
      name: 'Test Region',
      code: 'TEST',
      coefficient: 1.0,
      floor: 0.8,
      ceiling: 1.2,
      increment: 0.01,
      createdAt: new Date().toISOString(),
      updatedAt: new Date().toISOString()
    };

    const { data: insertData, error: insertError } = await supabaseAdmin
      .from('regions')
      .insert(testRegion);

    if (insertError) {
      console.log('‚ùå Error insertando regi√≥n:', insertError.message);
      if (insertError.message.includes('RLS')) {
        console.log('‚ö†Ô∏è  RLS est√° bloqueando la inserci√≥n - esto es normal si no hay pol√≠ticas configuradas');
      }
    } else {
      console.log('‚úÖ Inserci√≥n exitosa');
      
      // Limpiar datos de prueba
      const { error: deleteError } = await supabaseAdmin
        .from('regions')
        .delete()
        .eq('id', testRegion.id);
      
      if (deleteError) {
        console.log('‚ö†Ô∏è  Error limpiando datos de prueba:', deleteError);
      } else {
        console.log('‚úÖ Datos de prueba eliminados');
      }
    }

    console.log('\nüìã Recomendaciones:');
    console.log('1. Ve al SQL Editor de Supabase');
    console.log('2. Ejecuta el contenido de SUPABASE_RLS_POLICIES.sql');
    console.log('3. Esto configurar√° las pol√≠ticas de seguridad necesarias');

  } catch (error) {
    console.error('‚ùå Error durante la verificaci√≥n:', error);
  }
}

// Ejecutar verificaci√≥n si se llama directamente
if (require.main === module) {
  checkRLSPolicies();
}

export default checkRLSPolicies;
